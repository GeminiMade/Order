/*
 * File: app/store/storeH.js
 *
 * This file was generated by Sencha Architect version 4.2.6.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.7.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.7.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.storeH', {
    extend: 'Ext.data.Store',

    requires: [
        'MyApp.model.modelMWV',
        'Ext.data.proxy.JsonP',
        'Ext.data.reader.Json'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'storeH',
            model: 'MyApp.model.modelMWV',
            proxy: {
                type: 'jsonp',
                url: 'http://erpdc:10080/Gemini/Order/GetVMW.php',
                reader: {
                    type: 'json',
                    rootProperty: 'root'
                }
            },
            listeners: {
                load: {
                    fn: me.onJsonpstoreLoad,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onJsonpstoreLoad: function(store, records, successful, operation, eOpts) {
         if (records.length > 0){
                    data = records[0].data;
                    Ext.getCmp('hold').setValue(data.HOLD);
                    Ext.getCmp('oebdte').setValue(data.OEBDTE);
                    Ext.getCmp('oeslsm').setValue(data.OESLSM);
                    Ext.getCmp('oecont').setValue(data.OECONT);
                    Ext.getCmp('oeudf2').setValue(data.OEUDF2);
                    Ext.getCmp('oeorrf').setValue(data.OEORRF);
                    Ext.getCmp('oesvsv').setValue(data.OESVSV);
              Ext.getCmp('oectrm').setValue(data.OECTRM);
                    Ext.getCmp('crfgl').setValue(data.CRFGL);
                    Ext.getCmp('cust').setValue(data.CUST);
             Ext.getCmp('cust1').setValue(data.OESHTO);
                    Ext.getCmp('cmcna1').setValue(data.CMCNA1);
                    Ext.getCmp('adr').setValue(data.ADR);
                    Ext.getCmp('oerqdt').setValue(data.OERQDT);
                    Ext.getCmp('oedte2').setValue(data.OEDTE2);
                    Ext.getCmp('oesvds').setValue(data.OESVDS);
                    Ext.getCmp('bd').setValue(data.BD);
             Ext.getCmp('ds').setValue(data.DSHP);
             Ext.getCmp('dsadr').setHtml(data.DSHPADR);
                    Ext.getCmp('pd').setValue(data.PD);
                    Ext.getCmp('panelO1').setTitle('Order Review / Maintenance for ' +data.TITLE);
                         Ext.getCmp('panelO2').setTitle('Order Review / Maintenance for ' +data.TITLE);


           db = Ext.getCmp('db').getValue();
                ord = Ext.getCmp('inOrd').getValue();

             htm = 'http://erpdc:85/PHP/Gemini/OE/getAddDaysforOrd2.php?DB='+ db + '&ORD='+ ord;
             Ext.getCmp('panelO2').setHtml('<iframe src="' + htm + '" width="90%"  height = "90%"></iframe>');



        if (data.DVAL === '1') {
            Ext.getCmp('dsval').setHidden(true);
            Ext.getCmp('dsvalm').setHtml('Drop Ship Address is Valid');
            Ext.getCmp('dsvalm').setStyle('color: green;');
        }
        if (data.DVAL === '2') {
            Ext.getCmp('dsval').setText('Validate Drop Ship Address');
            Ext.getCmp('dsvalm').setHtml(data.DVALM);
            Ext.getCmp('dsvalm').setStyle('color: red;');
        }
        if (data.DVAL === 'X') {
            Ext.getCmp('dsval').setHidden(true);
            Ext.getCmp('dsvalm').setHtml('Drop Ship Address Overridden');
            Ext.getCmp('dsvalm').setStyle('color: #ff7400;');
        }
        if (data.DVAL === 'NC') {
            Ext.getCmp('dsval').setText('Validate Drop Ship Address');
            Ext.getCmp('dsvalm').setHtml('Address Not Verified');
            Ext.getCmp('dsvalm').setStyle('color: #3914af;');
        }

        if (data.DVAL === 'NA') {
            Ext.getCmp('dsval').setHidden(true);
            Ext.getCmp('dsvalm').setHidden(true);
            Ext.getCmp('ds').setHidden(true);
            Ext.getCmp('dsadr').setHidden(true);
        }
                }

        Ext.getCmp('cvalmsg').setHtml(data.CVALMSG);
        if (data.CVAL !== 'NA'){
            Ext.getCmp('cval').setHidden(true);
            Ext.getCmp('cvalmsg').setHtml('Address has been checked');
        }

    }

});